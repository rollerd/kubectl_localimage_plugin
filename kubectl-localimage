#!/bin/bash

# Create pod with init container to install docker image
create_reciever() {
  echo "Creating pod ${2}"
  # Split the image into [name, tag] array
  imageArr=(${1//:/ }) 
  cat <<EOF | $KUBECTL apply -f -
  apiVersion: v1
  kind: Pod
  metadata:
    name: ${2}
  spec:
    initContainers:
    - name: init
      image: docker:20.10.12
      imagePullPolicy: IfNotPresent
      command:
      - sh
      args:
      - -c
      - until docker images | grep ${imageArr[0]}\\.*${imageArr[1]};do sleep 1;done
      volumeMounts:
      - name: dockersock
        mountPath: /var/run/docker.sock
    containers:
    - name: ${2}
      image: ${1}
      imagePullPolicy: Never
      command:
      - ${3}
      args:
      - "${@:4:4}"
    volumes:
    - name: dockersock
      hostPath:
        path: /var/run/docker.sock
    terminationGracePeriodSeconds: 10
EOF
}

# Save local docker image as tar file
docker_save_image() {
  echo "Saving docker image to file"
  docker save -o /tmp/kubelocalimage.tar "${1}"
}

# Copy local tar file image to init container
push_image() {
  echo "Copying docker image tar file to init container"
  $KUBECTL cp /tmp/kubelocalimage.tar -c init ${1}:./
}

# Load tar file image into kube node local registry via init container
docker_load_image() {
  echo "Loading image to registry via init pod"
  $KUBECTL exec -c init ${1} -- docker load -i kubelocalimage.tar
}

# main() function
main() {
  if [[ -z "${KUBECTL:-}" ]]; then
    if hash kubectl 2>/dev/null; then
      KUBECTL=kubectl
    elif hash kubectl.exe  2>/dev/null; then
      KUBECTL=kubectl.exe
    else
      echo >&2 "kubectl is not installed"
      exit 1
    fi
  fi

  if [[ $1 == "help" ]] || [[ $1 == "-h" ]] || [[ $1 == "--help" ]];then
    echo "Requires <local image name:tag>, <pod_name>, <pod command>"
    exit 0
  fi

  if [[ $1 == "" ]] || [[ $2 == "" ]] || [[ $3 == "" ]];then
    echo "Requires <local image name:tag>, <pod_name>, <pod command>"
    exit 1
  fi

  docker_save_image "${1}"
  create_reciever "${1}" "${2}" "${3}" "${@:4:4}"
  push_image "${2}"
  docker_load_image "${2}"
  echo "${2} is now running!"
}

main "$@"
